*CONTENT:
1-modular arthmatic
2-Factorization
3-prime factorization
4-GCD
5-LCM
6-Compenations
7-permutations
8-Check prime//there are a file for primes
9-sum of even numbers from l to r
10-sum of odd numbers from l to r
11-xor
12-multiplication of 2 matrix
13-pascal triangle generation
14-Sum of all numbers in the given range which are divisible by M
15-convert between bases
16-prove that 3 points form a straight line
17-slope
18-prove that a point belongs to a rectangle
19-sum of numbers from l to r
20-What is the sum of this geometric series
21-cbrt(8);//الجزر التكعيبي لل 8
22-round,ceil,floor
23-التحويل بين الزوايا
24-pi
25-Area of a triangle
26-prove the shape is a triangle
27-slope,distance,and mid point between 2 points
28-Determine if the point is inside ,outsid or on the boundary in a circle
29- to see if 2 circles intersect or no
30-check if the number is power of 2
31-area of hexagonal shape=(3*sqrt(3)/2)*r*r
32-circle perimeter=2*pi*r;//pi=acos(-1)
33-Count number of devisors
34-find the sum of numbers from 1 to n that aren't devisable by a ,b
35-for big power (>32)use fastpower
36-find a fraction that can be dividable by 2 other fractions (fc%fa==0&&fc%fb==0)
37-check if a number is T-prime (divisble by exactly 3 numbers)
38-log usage (int big power,big product(multiplication)
39-find the time at which 2 squares intersect at area=q
-TRY MANY TESTS
-sum important laws //you can find them also in #6-Math.pdf
-sheet link including some important ideas: https://codeforces.com/group/MWSDmqGsZm/contest/223338
*********************************************************************************************************
1-modular arthmatic:
=0%1=0;
=1%0=math error;
=1%1=0;
-Cyclic:
=num%5-->num:0 1 2 3 4 5 6 7 8 9 10---ans-->0 1 2 3 4 0 1 2 3 4 0
=(a+b)%c=((a%c)+(b%c))%c  //help avoid over flow with big nums  result= 0:c-1
=(a+b+d)%c=((a%c)+(b%c)%c+(d%c))%c
=(a*b)%c=((a%c)*(b%c))%c  //help avoid over flow with big nums  result= 0:c-1
=(a*b*d)%c=((a%c)*(b%c)%c*(d%c))%c
-negatives:
=-8%3--->add 3 until negative number become positive (-8+3+3+3)%3=1%3=1;
=(a-b)%c=((a%c)-(b%c)+c)%c  // we add c because in wortht case (a%c)=0,and (b%c)=c-1 so we have negative
=(a-b-d)%c=((a%c)-(b%c)%c-(d%c)+c)%c
=(a/b)%c=(a*b^-1)%c=((a%c)*(b^-1%c))%c 
=A=B*Q+m;
=m=A-B*Q;
-"15"%3--->res=0;
        res*=10;
        ll x=a[i]-'0';
        res+=x;
        res%=b;
if(res=0)-->yes
**********************************************************************************************************
2-Factorization:الارقام اللي رقم ما بيقبل القسمه عليهم
=n%factor=0;
=code://output factors
void factors(ll n)//O(sqrt(n))
{
    for(int i=1;i*i<=n;i++)//sqrt-->O(log(n)),but i*i -->O(1)
    {
        if(n%i==0)
        {
            cout<<i<<' ';
            if(i*i!=n)cout<<n/i<<' ';
        }
    }
    cout<<'\n';
}
***********************************************************************************************************
3-prime factorization:
-a number is called prime if it has only 2 factors
-The negative numbers is not a prime
-any number=multiplication of sum primes
-36=2*2*3*3
-code:
void prime_factors(ll n)//O(sqrt(n)*log (n))
{
    for(int i=2;i*i<=n;i++)
    {
        while(n%i==0)
        {
            cout<<i<<' ';
            n/=i;
        }
    }
    if(n!=1)cout<<n;
    cout<<'\n';
}
***********************************************************************************************************
4-GCD://O(log(max(a,b)))
-any number=multiplication of sum primes,ex:gcd(30,45)
-30=2*3*5  -45=3*3*5   -gcd=common primes=3*5=15
-gcd=min repitation
-Eculidean algorithm:depend on modular arthmatic
=A=B*Q+m;
=m=A-B*Q;
=gcd(a,b)=gcd(b,a%b);
-Iterative code:
ll GCD(ll a,ll b)//better in memory
{
    while(b!=0)
    {
       ll a2=a;
       a=b;
       b=a2%b;
    }
    return a;
}
-recursive code:
ll GCD(ll a,ll b)
{
    if(b==0)return a;
    return GCD(b,a%b);
}
if(GCD(a,b)=x,LCM(a,b)=y)---->GCD(x,y)=a,LCM(x,y)=b
problem:https://codeforces.com/group/wVejEOTOwS/contest/360183/problem/B
any number consists of some primes--->so GCD will be product of sum primes -->24=2*2*2*3-->GCD=2-->4*2*3-->GCD=2-->4*6-->GCD=2-->2*12-->Gcd=2-->1*24-->gcd=1
***********************************************************************************************************
5-LCM=(a*b)/GCD;
-lcm=max repitation
***********************************************************************************************************
6-compenations
unsigned long long nCr(int n, int r) {
	if (r > n)
		return 0;
	r = max(r, n - r); //nCr(n,r) = nCr(n,n-r)
	unsigned long long ans = 1, div = 1, i = r + 1;
	while (i <= n) {
		ans *= i;
		i++;
		ans /= div;
		div++;
	}
	return ans;
}
nCr(n,r)=n!/(r!*(n-r)!)=(n-1,r)!+(n-1,r-1)!
code:
ll factorial(ll n,ll r)
{
    if(r>n)return 0;
   if(r==1)return n;
   if(r==0)return 1;
   return factorial(n-1,r)+factorial(n-1,r-1);
}
************************************************************************************************************
7-permutations
unsigned long long nPr(int n, int r) {
	if (r > n)
		return 0;
	unsigned long long p = 1, i = n - r + 1;
	while (i <= n)
		p *= i++;
	return p;
}
***********************************************************************************************************
8-check prime:
bool isPrime(int n)//O(sqrt(n))
{
    if (n <= 1)
        return false;
    if (n == 2 || n == 3)
        return true;
    if (n % 2 == 0 || n % 3 == 0)
        return false;
    for (int i = 5; i*i <=n; i = i + 6)
        {
            if (n % i == 0 || n % (i + 2) == 0)
            return false;
        }
 
    return true;
}
-recursivly:
bool is_prime(int m, int cur_test_number = 3) {
	if (m == 2)
		return true;

	if (m <= 1 || m % 2 == 0)
		return false;

	if (m == cur_test_number)
		return true;

	if (m % cur_test_number == 0)
		return false;

	return is_prime(m, cur_test_number + 1);
}
***********************************************************************************************************
9-sum of even numbers from l to r:
n = ((maxeven - mineven) / 2) + 1;//in range 
sum = n * (mineven + n - 1);
***********************************************************************************************************
10-sum of odd numbers from l to r:
n = ((maxodd - minodd) / 2) + 1;
s = n * (minodd + n - 1);
***********************************************************************************************************
11-xor:لو متشابهين بصفر مختلفين بواحد
  -a^a=0
***********************************************************************************************************
12-multiplication of 2 matrix:
صفوف المصفوفه الاولي تساوي اعمده المصفوفه التانيه
code:
                int c[105][105] ;
		for (int i = 0; i < ra; i++)
		{
			for (int j = 0; j < cb; j++)
			{
				long long x, s = 0;
				for (int k = 0; k < ca; k++)
				{
					x = a[i][k] * b[k][j];
					s += x;
				}
				c[i][j] = s;
			}
		}
***********************************************************************************************************
13-pascal triangle generation:
1                c(0,0)
1 1              c(1,0) c(1,1)
1 2 1 ------->   c(2,0) c(2,1) c(2,2)
1 3 3 1          c(3,0) c(3,1) c(3,2) c(3,3)
-formula=(n!/(k!*(n-k)!))=c(n,k)

***********************************************************************************************************
14-Sum of all numbers in the given range which are divisible by M:
n=B / M - (A - 1)/ M
sum= N * ( (first term + last term) / 2)
***********************************************************************************************************
15-convert between bases:
=from any base to decimal ,ex:
  1   0   1 
*   +   +    =5
 2^2 2^1 2^0 
code:
{
        string n;
        cin>>n>>x;
        reverse(n.begin(),n.end());
        ll res=0;
        for(ll i=0;i<n.size();i++)
        {
            ll d;
            if(n[i]>='0'&&n[i]<='9')d=n[i]-'0';
            else d=n[i]-'A'+10;
            res+=(pow(x,i)*d);
        }
        cout<<res;
    }
---------------------------------------------------------------------------------------------------------------
=from decimal to any base:
 5/2      rem=1
 2/2          0 ------>result=101
 1/2          1
code:
{
        ll n;
        cin>>n>>x;//5 2
        string res="";
        while(n)
        {
            char c;
            ll d=n%x;
            n/=x;
            if(d>=0&&d<=9)c=(char)(d+'0');
            else c=(char)(d+'A'-10);
            res+=c;
        }
        reverse(res.begin(),res.end());
        cout<<res;
    }    
***********************************************************************************************************
16-prove that 3 points form a straight line:(x1,y1)(x2,y2)(x3,y3)
=(y3-y2)*(x2-x1)=(y2-y1)*(x3-x2)
or
s = (double)0.5 * (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2));
if s=0-->yes,else no
***********************************************************************************************************
17-slope=(y2-y1)/(x2-x1)
  -for to lines to be parllel their slopes should be equal
  -لاثبات التعامد يكون حاصل ضرب الميلين يساوي 0
  -خلي بالك من القسمه علي 0
*********************************************************************************************************** 
18-prove that a point belongs to a rectangle
if (a >= minx && a <= maxx && b >= miny && b <= maxy)
			cout << "YES" << endl;
***********************************************************************************************************
19-sum of numbers from l to r= =firstNumber+lastNumber/ 2* numberOfNumber =1 + 20/2 20 = 210 
-better formula=(mx*(mx+1)/2)-(mn*(mn+1)/2)+mn;
-sum of numbers in a sequence:{4, 10, 16, 22, 28, 34, 40}//l:smallest number , r:biggest number
-code:
    double x=(double)(l+r)/2;
    ll numberOfNumber=r-l+1;
    cout<<x*numberOfNumber;
*********************************************************************************************************
20-What is the sum of this geometric series: 1 3 9 27 81 243 729 ? (using formula)
sum =firstNum*(base^numberOfnumbers -1)/(base -1)=137 -13 -1=1093
-code:cout<<1*(pow(3,7)-1)/2;
********************************************************************************************************
21-cbrt(8);//الجزر التكعيبي لل 8
********************************************************************************************************
22-round-->nearest ,floor--->down ,ceil--->up
*******************************************************************************************************
23-What is the angle of 60 degrees in radians?=60*pi/180;
-What is the angle 3.142 radian in degrees?3.142 radians = radians * 180 / PI = 180 degrees
*******************************************************************************************************
24-double PI=acos(-1);//3.14
*******************************************************************************************************
25-Area of a triangle=sqrt(s*(s-a)*(s-b)*(s-c));//s=(a+b+c)/2;
*******************************************************************************************************
26-to prove the shape is a triangle :the sum of the two smallest sides should be greater than the other side.
   to prove the shape is a non-degenerate triangle --->a+b>c and a+c>b and b+c>a
*******************************************************************************************************
27-you have two points a(x1,y1),b(x2,y2):
-Slope = (y2 - y1) / (x2 - x1) ;
-Distance between 2 points =sqrt(((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1)));
-Midpoint between 2 points= ((x1 + x2) / 2, (y1 + y2) / 2);
*******************************************************************************************************
28-Determine if the point is inside ,outsid or on the boundary in a circle:
-Distance between the center and the point < Radius : in the circle
-Distance between the center and the point = Radius : on the boundary of the circle
-Distance between the center and the point > Radius : outside the circle
******************************************************************************************************
29- to see if 2 circles intersect or no:
R1 = Radius of the main circle, R2 = Radius of the circles in the set
By comparing the distance between the centers and the the sum of two radius:
Doesn’t intersect:				distance > R1 + R2
Intersect in one point externally:	        distance = R1 + R2
Intersect in two points:	  		R1-R2<distance < R1 + R2
Intersect in one point internally:		distance = R1 - R2
Inside the main circle:			        0<distance < R1 - R2
Concentric:					distance = 0
*******************************************************************************************************
30-check if the number is power of 2
code:
while(n!=1)
    {
        if(n%2!=0)
        {
            is=0;
            break;
        }
        else
        {
            n/=2;
        }
    }
    if(is)cout<<"YES\n";
*Geometry:https://www.mathsisfun.com/geometry/plane-geometry.html
*long long =evry number <1e19
*****************************************************************************************************
33-count number of devisors:
24-->2*2*2*3=2^3*3^1-->prime factors
prime factors for a number=2^a*3^b*4^c........
number of devisors=(a+1)*(b+1)*(c+1)...
use prime factor coe to solve problems of this tybe -->3
*****************************************************************************************************
34-find the sum of numbers from 1 to n that aren't devisable by a ,b:
 tests: 10 2 4  --->تزكر ان بعض الارقام قد تطرح مرتين جرب هظا المثال
ll first(ll n,ll m)
{
    ll r=n%m;
    return n-r;
}
ll last(ll n,ll m)
{
    ll r=(n+m)%m;
    return n+m-r;
}
int main() {
    IOS;
    //a
    ll suma=0;
    if(a<=n)
    {
        ll f=first(1,a);
        ll l=last(n,a);
        if(f<1)f+=a;
        if(l>n)l-=a;
        ll cnt=l / a - (f - 1)/ a;
        suma=cnt * (f+l)/2;
    }
    //b 
    ll sumb=0;
    if(b<=n)
    {
        ll f=first(1,b);
        ll l=last(n,b);
        if(f<1)f+=b;
        if(l>n)l-=b;//10
        ll cnt=l / b - (f - 1)/ b;//2-0
        sumb=cnt * (f+l)/2;//2(15/2)
    }
    ll c=a*b/__gcd(a,b);//6 
    //c 
    ll sumc=0;
    if(c<=n)
    {
        ll f=first(1,c);
        ll l=last(n,c);
        if(f<1)f+=c;
        if(l>n)l-=c;
        ll cnt=l / c - (f - 1)/ c;
        sumc=cnt * (f+l)/2;
    }
    ll sum=n*(n+1)/2;
    //cout<<sum<<' '<<suma<<' '<<sumb<<' '<<sumc<<'\n';
    cout<<sum-suma-sumb+sumc;
    }
   ***********************************************************************************************
   35-for big power (>32)use fastpower:
   -code:
   ll fastPower(ll n)
   {
    ll ans=1,m=1e9+7,x=2;
    while(n)
    {
        if(n&1)ans = (ans * x) % m;
        x = (x * x) % m;
        n >>= 1;
    }
    return ans;
   }
   -other code:
   long long fast_power(long long a, long long b, ll mod)
   {
	long long res = 1;
	while (b)
	{
		if (b & 1)
			res = res * a % mod;
		a = a * a % mod;
		b /= 2;
	}
	return res;
   }
*****************************************************************************************************************************************************
36-find a fraction that can be dividable by 2 other fractions (fc%fa==0&&fc%fb==0):
a=2/3  b=4/5  c=x/y 
x=lcm(البسط)
y=__gcd(المقام)
x=(2*4)/__gcd(2,4);
y=__gcd(3,5)
c=4/1
**********************************************************************************************************************************************************
37-check if a number is T-prime (divisble by exactly 3 numbers):
25---->1 25 5-->sqrt(25)
36---->1 36 6-->sqrt(36) 2 3 -->6=2*3
so, for a number to be T-prime it should be divsible by 1, the number itself,and sqrt(number),but sqrt(number)should be prime.
**********************************************************************************************************************************************************
38-log usage (int big power,big product(multiplication):
=log(a*b)=log(a)+log(b)
=10^log(x)>10^(sum/2)
 10 go with log
 x>10^(sum/n)
=a^b=c^d-->b*log(a)=d*log(c)
problem:https://codeforces.com/group/MWSDmqGsZm/contest/223340/problem/G
*********************************************************************************************************************************************************
39-find the time at which 2 squares intersect at area=q:
time=sqrt(2)*(l-sqrt(q))/(s2-s1),where:
l=طول ضلع المربعين
s2=سرعة المربع التاني
s1=سرغة المربع الاول
************************************************************************************************************************************************************


